{"uid":"194c919181de0480","name":"test_user_registration","fullName":"tests.test_user_registration#test_user_registration","historyId":"541394ea0cfde4c8462c2d79980c4244","time":{"start":1761320738276,"stop":1761320746605,"duration":8329},"status":"failed","statusMessage":"AssertionError: Locator expected to have text 'Your Account Has Been Created!!'\nActual value: Your Account Has Been Created! \nCall log:\n  - Expect \"to_have_text\" with timeout 5000ms\n  - waiting for locator(\"h1:has-text(\\\"Your Account Has Been Created!\\\")\")\n    9 × locator resolved to <h1>Your Account Has Been Created!</h1>\n      - unexpected value \"Your Account Has Been Created!\"","statusTrace":"page = <Page url='http://localhost/opencart/upload/index.php?route=account/success'>\n\n    @pytest.mark.sanity\n    @pytest.mark.regression\n    def test_user_registration(page):\n        home_page=HomePage(page)\n        registration_page=RegistrationPage(page)\n    \n        home_page.click_my_account()\n        home_page.click_register()\n    \n        random_data=RandomDataUtil()\n    \n        first_name=random_data.get_first_name()\n        last_name = random_data.get_last_name()\n        email = random_data.get_email()\n        phone = random_data.get_phone_number()\n        password = random_data.get_password()\n    \n        registration_page.set_first_name(first_name)\n        registration_page.set_last_name(last_name)\n        registration_page.set_email(email)\n        registration_page.set_telephone(phone)\n        registration_page.set_password(password)\n        registration_page.set_confirm_password(password)\n    \n        registration_page.set_privacy_policy()\n        registration_page.click_continue()\n    \n        confirmation_msg=registration_page.get_confirmation_msg()\n>       expect(confirmation_msg).to_have_text(\"Your Account Has Been Created!!\")\nE       AssertionError: Locator expected to have text 'Your Account Has Been Created!!'\nE       Actual value: Your Account Has Been Created! \nE       Call log:\nE         - Expect \"to_have_text\" with timeout 5000ms\nE         - waiting for locator(\"h1:has-text(\\\"Your Account Has Been Created!\\\")\")\nE           9 × locator resolved to <h1>Your Account Has Been Created!</h1>\nE             - unexpected value \"Your Account Has Been Created!\"\n\ntests\\test_user_registration.py:61: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1761320727386,"stop":1761320727468,"duration":82},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false},{"name":"browser_context","time":{"start":1761320736527,"stop":1761320737338,"duration":811},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false},{"name":"page","time":{"start":1761320737338,"stop":1761320738275,"duration":937},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Locator expected to have text 'Your Account Has Been Created!!'\nActual value: Your Account Has Been Created! \nCall log:\n  - Expect \"to_have_text\" with timeout 5000ms\n  - waiting for locator(\"h1:has-text(\\\"Your Account Has Been Created!\\\")\")\n    9 × locator resolved to <h1>Your Account Has Been Created!</h1>\n      - unexpected value \"Your Account Has Been Created!\"","statusTrace":"page = <Page url='http://localhost/opencart/upload/index.php?route=account/success'>\n\n    @pytest.mark.sanity\n    @pytest.mark.regression\n    def test_user_registration(page):\n        home_page=HomePage(page)\n        registration_page=RegistrationPage(page)\n    \n        home_page.click_my_account()\n        home_page.click_register()\n    \n        random_data=RandomDataUtil()\n    \n        first_name=random_data.get_first_name()\n        last_name = random_data.get_last_name()\n        email = random_data.get_email()\n        phone = random_data.get_phone_number()\n        password = random_data.get_password()\n    \n        registration_page.set_first_name(first_name)\n        registration_page.set_last_name(last_name)\n        registration_page.set_email(email)\n        registration_page.set_telephone(phone)\n        registration_page.set_password(password)\n        registration_page.set_confirm_password(password)\n    \n        registration_page.set_privacy_policy()\n        registration_page.click_continue()\n    \n        confirmation_msg=registration_page.get_confirmation_msg()\n>       expect(confirmation_msg).to_have_text(\"Your Account Has Been Created!!\")\nE       AssertionError: Locator expected to have text 'Your Account Has Been Created!!'\nE       Actual value: Your Account Has Been Created! \nE       Call log:\nE         - Expect \"to_have_text\" with timeout 5000ms\nE         - waiting for locator(\"h1:has-text(\\\"Your Account Has Been Created!\\\")\")\nE           9 × locator resolved to <h1>Your Account Has Been Created!</h1>\nE             - unexpected value \"Your Account Has Been Created!\"\n\ntests\\test_user_registration.py:61: AssertionError","steps":[],"attachments":[{"uid":"e22c15ce039892c","name":"stdout","source":"e22c15ce039892c.txt","type":"text/plain","size":508}],"parameters":[],"hasContent":true,"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":0,"attachmentStep":false},"afterStages":[{"name":"page::0","time":{"start":1761320746614,"stop":1761320747046,"duration":432},"status":"passed","steps":[],"attachments":[{"uid":"f025e14da5f2c93f","name":"test_user_registration_screenshot","source":"f025e14da5f2c93f.png","type":"image/png","size":68632},{"uid":"3528e439049098d6","name":"test_user_registration_video","source":"3528e439049098d6.webm","type":"video/webm","size":0}],"parameters":[],"hasContent":true,"attachmentsCount":2,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false},{"name":"browser_context::0","time":{"start":1761320747047,"stop":1761320747622,"duration":575},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false}],"labels":[{"name":"tag","value":"regression"},{"name":"tag","value":"sanity"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_user_registration"},{"name":"host","value":"Pavan-Lenova"},{"name":"thread","value":"28212-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_user_registration"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":["regression","sanity"]},"source":"194c919181de0480.json","parameterValues":[]}